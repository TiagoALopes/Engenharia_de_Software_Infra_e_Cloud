$script_mysql = <<-SCRIPT
  apt-get update && \
  apt-get install -y mysql-server-5.7 && \
  mysql < /vagrant/mysql/script/user.sql && \
  mysql < /vagrant/mysql/script/schema.sql && \
  mysql < /vagrant/mysql/script/data.sql && \
  cat /vagrant/mysql/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf && \
  service mysql restart
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  
  # Configurando porta para o host
  #config.vm.network "forwarded_port", guest: 80, host: 3306

  # Configurando ip privado
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Configurando rede local
  # config.vm.network "public_network"

  # Criando pastas no diretorio.
  config.vm.synced_folder "data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    #vb.gui = true
  
    # Customize the amount of memory on the VM:
    vb.memory = "1024"
	vb.cpus = 1
  end
  
  config.vm.define "mysqlserver2" do |mysqlserver2|
    mysqlserver2.vm.network "private_network", ip: "10.80.4.10"

    mysqlserver2.vm.provider "virtualbox" do |vb|
      vb.name = "mysqlserver2"
    end

    mysqlserver2.vm.provision "shell", inline: $script_mysql
  end
  
  config.vm.define "springapp2" do |springapp2|
    springapp2.vm.network "private_network", ip: "10.80.4.14"
    springapp2.vm.network "forwarded_port", guest: 8080, host: 3306

    springapp2.vm.provider "virtualbox" do |vb|
      vb.name = "springapp2"
      vb.memory = 4096
      vb.cpus = 2
    end
  
	  #
	  # View the documentation for the provider you are using for more
	  # information on available options.

	  # Enable provisioning with a shell script. Additional provisioners such as
	  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
	  # documentation for more information about their specific syntax and use.
	  # config.vm.provision "shell", inline: <<-SHELL
		# apt-get update
		# apt-get install -y apache2
	  # SHELL
  
	springapp2.vm.provision "shell", inline: "apt-get update && apt-get install -y openjdk-11-jre unzip"
    springapp2.vm.provision "shell", inline: "unzip -o /vagrant/springapp/springapp.zip -d /srv"
    springapp2.vm.provision "shell", inline: "mkdir -p /var/log/springapp"
    springapp2.vm.provision "shell", inline: "cp /vagrant/springapp/springapp.service /etc/systemd/system/springapp.service"
    springapp2.vm.provision "shell", inline: "sudo systemctl start springapp.service"
    springapp2.vm.provision "shell", inline: "sudo systemctl enable springapp.service"
  end 
end
